package com.example.jpa.controller;
import java.util.List;
import java.util.Optional;

import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.jpa.entities.Person;
import com.example.jpa.entities.User1;
import com.example.jpa.service.UserService;

@RestController
public class HomeController {

	private static final Logger log = LoggerFactory.getLogger(HomeController.class);


	@Autowired
	private UserService userService;

	@GetMapping(value = "/hii")
	public String display() {
		return "hello";
	}

	@PostMapping(value = "/hello")
	public ResponseEntity<User1>  getSave(@RequestBody User1 user) {
		System.out.println("coming in save Controler");
		System.out.println("-------------");
	
		user=userService.getSave(user);
		log.info("name"+user.getUserName());
		return ResponseEntity.status(HttpStatus.OK).body(user);
				
	}
	@PostMapping(value = "/save")
	public ResponseEntity<Person>  getSave(@RequestBody String person) {
		System.out.println("coming in save Controler");
	JSONObject obj= new JSONObject(person);
		String userName=obj.getJSONObject("User").getString("userName");
		String password=obj.getJSONObject("User").getString("password");
		String city=obj.getJSONObject("User").getString("city");
		System.out.println(userName+password+city);
		User1 user=new User1();
		user.setCity(city);
		user.setPassword(password);
		user.setUserName(userName);
		//userService.getSave(user);
		Person person1= new Person();
		person1.setAddress(obj.getString("address"));
		person1.setName(obj.getString("name"));
		person1.setPhone(obj.getString("phone"));
		person1.setUser(user);
	userService.getSave(person1);
		return ResponseEntity.status(HttpStatus.OK).body(person1);
		//return person1;
				
	}
	@GetMapping(value = "/getUser")
	public ResponseEntity  getUser() {
		System.out.println("coming in getuser Controler");
		log.info("info");
		log.warn("warn");
		log.error("error");
		log.debug("debug");
		Optional<User1> user=	userService.getUser();
		if(user.isPresent())
		return ResponseEntity.status(HttpStatus.OK).body(user) ;
		else
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Not Found") ;
	}
	//To get the details of person by id
	@GetMapping(value = "/getPerson",produces =  { "application/xml", "text/xml" ,"application/json"},consumes = MediaType.ALL_VALUE)
	public ResponseEntity  getPerson() {
		System.out.println("coming in getperson Controler");
		Optional<Person> person=userService.getPerson();
		System.out.println(person.get().getPhone());
		System.out.println(person.get().getUser().getCity());
		if(person.isPresent())
		return ResponseEntity.status(HttpStatus.OK).body(person) ;
		else
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Not Found") ;
	}

	@GetMapping(value = "/getAllUser",produces =  { "application/xml", "text/xml" ,"application/json"},consumes = MediaType.ALL_VALUE)
	public List<User1> getAllUser() {
		System.out.println("coming in getAlluser Controler");

		return userService.getAllUser();
	}
//To get the details of all person
	@GetMapping(value = "/getAllPerson",produces =  { "application/xml", "text/xml" ,"application/json"},consumes = MediaType.ALL_VALUE)
	public List<Person> getAllPerson() {
		System.out.println("coming in getAllPerson Controler");

		return userService.getAllPerson();
	}
	@DeleteMapping(value = "/delUser")
	public String delUser() {
		System.out.println("coming in deluser Controler");

		return userService.delUser();
	}

	@PutMapping(value = "/updtUser")
	public String updtUser() {
		System.out.println("coming in updtuser Controler");
		userService.updtUser();
		return "updated";
	}

	/*
	 * //To update the details of person
	 * 
	 * @PutMapping(value = "/updtPerson/{id}") public ResponseEntity<String>
	 * updtPerson(@PathVariable("id") int id) throws NotFoundException {
	 * System.out.println("coming in update Person Controler");
	 * System.out.println("id"+id); String status= (String)
	 * userService.updtPerson(id); return
	 * ResponseEntity.status(HttpStatus.OK).body(status) ; }
	 */
	@GetMapping(value = "/findByName")
	public User1 findUser() {
		System.out.println("coming in findUser Controler");
		return userService.findByName();
		
	}
	@GetMapping(value = "/getData")
	public User1 getData() {
		System.out.println("coming in getData Controler");
		return userService.getData();
		
	}
	@PostMapping(value = "/getObject")
	public String getObject(@RequestBody String req) {
		System.out.println("coming in getObject Controler");
	JSONObject obj= new JSONObject(req);
	String s=obj.getJSONObject("Ram").getString("city");
	System.out.println("City is"+s);
	return req;
		
	}
	
}
