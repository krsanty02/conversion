<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="com.example.jpa.exception.NotFoundException"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
<fullyQualifiedTypeName name="com.example.jpa.exception.ExceptionPOJO"/>
<fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
<fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
<fullyQualifiedTypeName name="javax.xml.bind.annotation.XmlRootElement"/>
<fullyQualifiedTypeName name="javax.xml.bind.annotation.XmlAttribute"/>
<fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
<fullyQualifiedTypeName name="javax.xml.bind.annotation.XmlElement"/>
<fullyQualifiedTypeName name="javax.xml.bind.annotation.XmlAccessorType"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlRootElement"/>
<fullyQualifiedTypeName name="com.fasterxml.jackson.dataformat.xml.annotation.JacksonXmlProperty"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.WebSecurityConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter"/>
<fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationProvider"/>
<fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.Table"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
<fullyQualifiedTypeName name="org.springframework.security.crypto.password.NoOpPasswordEncoder"/>
<fullyQualifiedTypeName name="com.example.security.controller.PassswordDao"/>
<fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
<fullyQualifiedTypeName name="java.util.Collections"/>
<fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="javax.persistence.Column"/>
<fullyQualifiedTypeName name="javax.persistence.OneToMany"/>
<fullyQualifiedTypeName name="javax.persistence.JoinColumn"/>
<fullyQualifiedTypeName name="org.hibernate.annotations.Cascade"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="com.example.userService.entity.User"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
<fullyQualifiedTypeName name="com.example.userService.proxy.UserProxy"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
<fullyQualifiedTypeName name="com.example.userService.entity.Student"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.RouteLocator"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.cloud.gateway.route.builder.RouteLocatorBuilder"/>
<fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
</qualifiedTypeNameHistroy>
